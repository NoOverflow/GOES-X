@page "/"
@using GOES_X.Model
@using GOES_X.Services
@using static GOES_X.Shared.NavMenu
@inject UserPreferencesService UserPreferencesService
@inject AnimationService AnimationService
@inject IJSRuntime JsRuntime
@inject IHttpClientFactory ClientFactory

<div class="topbar ui">
    <h1>@SatelliteName</h1>
   
    <button @onclick="ToggleMenu" id="menu-button">
        <svg width="30" height="23" viewBox="0 0 30 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect width="30" height="3" fill="#FFF"/>
            <rect y="10" width="30" height="3" fill="#FFF"/>
            <rect y="20" width="30" height="3" fill="#FFF"/>
        </svg>
    </button>
</div>
<h4 class="ui">@(GetTimestamp().ToString("dd/MM/yy - HH:mm"))</h4>
<NavMenu Style="@MenuStyleCSS" />

<Visualizer />


@code {
    public bool MenuVisible = false;
    public string MenuStyleCSS => (MenuVisible ? "show" : "collapse");
    public static DateTime EupTimestamp = DateTime.UtcNow.AddHours(-1);
    public string SatelliteName { get; set; } = "GOES 17";
    public UserPreferences? Preferences { get; set; } = null;

    private DateTime GetTimestamp()
    {
        if (AnimationService.AnimationRunning)
            return AnimationService.CurrentDate;
        else if (Preferences != null)
            return Preferences.DataTimings.Realtime ? DateTime.UtcNow : Preferences.DataTimings.StartTime;    
        else
            return DateTime.UtcNow;
    }

    protected override async Task OnInitializedAsync()
    {
        Preferences = await UserPreferencesService.GetPreferencesAsync();
        UserPreferencesService.OnUserPreferencesUpdate += async () =>
        {
            Preferences = await UserPreferencesService.GetPreferencesAsync();
            InvokeAsync(() => StateHasChanged());
        };
    }

    private void ToggleMenu()
    {
        MenuVisible = !MenuVisible;
    }
}
