@page "/"
@using GOES_X.Model
@using GOES_X.Services
@using static GOES_X.Shared.NavMenu
@inject UserPreferencesService UserPreferencesService

<div class="topbar">
    <h1>@SatelliteName</h1>
    
    <button @onclick="ToggleMenu" id="menu-button">
        <svg width="30" height="23" viewBox="0 0 30 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect width="30" height="3" fill="#FFF"/>
            <rect y="10" width="30" height="3" fill="#FFF"/>
            <rect y="20" width="30" height="3" fill="#FFF"/>
        </svg>
    </button>
</div>

<NavMenu Style="@MenuStyleCSS" />

<div id="temp-visualizer">
    @if (Preferences is null)
    {
        <h2>Loading preferences...</h2>
    }
    else
    {
        @foreach (var eup in Preferences.SelectedProducts)
        {
            <img style="opacity: @(eup.Opacity.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture));" src="@(BuildEupUrl(eup))" />
        }
    }
</div>

@code {
    // Dynamic CSS
    public bool MenuVisible = false;
    public string MenuStyleCSS => (MenuVisible ? "show" : "collapse");
    public static DateTime EupTimestamp = DateTime.UtcNow.AddHours(-1);
    public string SatelliteName { get; set; } = "GOES 17";

    public UserPreferences? Preferences { get; set; } = null;

    private string BuildEupUrl(GOES_X.Model.EndUserProduct eup)
    {
        return $"/api/eup?eupName={eup.EupName}&key={eup.EupIndexName}&timestamp={EupTimestamp.Ticks}";
    }

    protected override async Task OnInitializedAsync()
    {
        Preferences = await UserPreferencesService.GetPreferencesAsync();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        UserPreferencesService.OnUserPreferencesUpdate += async () =>
        {
            Preferences = await UserPreferencesService.GetPreferencesAsync();
            InvokeAsync(() => StateHasChanged());
        };
    }

    private void ToggleMenu()
    {
        MenuVisible = !MenuVisible;
    }
}
